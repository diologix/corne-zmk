#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Layer Definitions

#define COLEMAK 0
#define QWERTY 1
#define GAMING_COLEMAK 2
#define GAMING_QWERTY 3
#define LAYERS 4
#define NAV 5
#define MOUSE 6
#define MEDIA 7
#define NUM 8
#define SYM 9
#define FN 10

// Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

// Keymap configuration (Colemak-DHm)

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <16 15 14>;
        };

        Control_Combo {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <39 38>;
        };

        Super_Combo {
            bindings = <&kp LEFT_WIN>;
            key-positions = <40 38>;
        };

        ALT_COMBO {
            bindings = <&kp LEFT_ALT>;
            key-positions = <41 38>;
        };

        Umlaute_klein {
            bindings = <&to 7>;
            key-positions = <36 40>;
        };

        Umlaute_gross {
            bindings = <&to 8>;
            key-positions = <36 41>;
        };
    };

    macros {
        Umlaut_a: Umlaut_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_2 &kt LEFT_ALT>;
            label = "UMLAUT_A";
        };

        Umlaut_o: Umlaut_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_8 &kt LEFT_ALT>;
            label = "UMLAUT_O";
        };

        Umlaut_u: Umlaut_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_9 &kt LEFT_ALT>;
            label = "UMLAUT_U";
        };

        Umlaut_A: Umlaut_A {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_2 &kt LEFT_ALT>;
            label = "UMLAUT_A";
        };

        Umlaut_O: Umlaut_O {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_3 &kt LEFT_ALT>;
            label = "UMLAUT_O";
        };

        Umlaut_U: Umlaut_U {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_4 &kt LEFT_ALT>;
            label = "UMLAUT_U";
        };

        Umlaut_sz: Umlaut_sz {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kt LEFT_ALT>;
            label = "UMLAUT_SZ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak-dh-de {
            // -----------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     F     |     P     |     B     | # |     J     |    L     |    U    |    Y   |   '    |     |
            // | LAYERS | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT  |     G     | # |     M     | N/LSHFT  | E/LCTRL | I/LALT | O/LGUI |     |
            // |        |   Z    | X/RALT |     C     |     D     |     V     | # |     K     |    H     |    ,    | ./RALT |   /    |     |
            //                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&trans  &kp Q  &kp W  &kp F         &kp P            &kp B          &kp J        &kp L             &kp U      &kp Y       &kp SEMICOLON  &trans
&trans  &kp A  &kp R  &kp S         &kp T            &kp G          &kp M        &kp N             &kp E      &kp I       &kp O          &trans
&trans  &kp Z  &kp X  &kp C         &kp D            &kp V          &kp K        &kp H             &kp COMMA  &kp PERIOD  &kp FSLH       &trans
                      &lt 3 DELETE  &lt 4 BACKSPACE  &lt 5 SPACE    &lt 6 ENTER  &lt 2 LEFT_SHIFT  &lt 1 TAB
            >;
        };

        nav-function {
            // -------------------------------------------------------------------------------------------
            // |     |      |      |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
            // |     |      | RALT |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
            //                     |       | HELD  |     | # | ENTER | BSPC | DEL  |

            bindings = <
&trans  &trans          &trans            &trans         &trans        &trans           &kp K_REDO       &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_UNDO  &trans
&trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_META  &kp LEFT_ALT  &kp RIGHT_ALT    &kp CAPSLOCK     &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT   &trans
&trans  &trans          &trans            &trans         &trans        &trans           &kp PRINTSCREEN  &kp HOME   &kp PG_DN   &kp PG_UP    &kp END     &trans
                                          &trans         &trans        &trans           &trans           &trans     &trans
            >;
        };

        media {
            // -----------------------------------------------------------------------------------------------------
            // |     |      |      |       |       |      | # | BOOTLOAD | EP_OFF | BR_D   | BR_U   | EP_ON  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |      | # | RESET    | PREV   | VOL_D  | VOL_U  | NEXT   |     |
            // |     |      | RALT |       |       |      | # | OUT_BLE  | BT_0   | BT_PRV | BT_NXT | BT_CLR |     |
            //                     | HELD  |       |      | # | STOP     | PLAY   | MUTE   |

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bootloader   &ext_power EP_OFF  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &ext_power EP_ON  &trans
&trans  &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT     &trans          &sys_reset    &kp K_PREV         &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp K_NEXT        &trans
&trans  &trans        &to 0         &to 10        &to 9         &trans          &out OUT_TOG  &bt BT_SEL 0       &bt BT_PRV            &bt BT_NXT            &bt BT_CLR        &trans
                                    &trans        &trans        &trans          &kp K_STOP    &kp K_PLAY_PAUSE   &kp K_MUTE
            >;
        };

        symbols {
            // ------------------------------------------------------------------------------------
            // |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
            // |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     |
            //                   |  (  |  )  |  _  | # | HELD |       |       |

            bindings = <
&trans  &kp LG(CARET)  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp SQT            &kp RBRC             &trans                &trans                 &trans         &trans         &trans         &trans
&trans  &kp TILDE      &kp DLLR         &kp PRCNT          &kp LG(AMPERSAND)  &kp PIPE             &trans                &kp LSHFT              &kp LCTRL      &kp LEFT_META  &kp LEFT_ALT   &trans
&trans  &kp AT_SIGN    &kp LEFT_BRACE   &kp RIGHT_BRACE    &kp LEFT_BRACKET   &kp RIGHT_BRACKET    &trans                &trans                 &trans         &kp RALT       &kp RIGHT_ALT  &trans
                                        &trans             &trans             &trans               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
            >;
        };

        Functions {
            bindings = <
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans          &trans            &trans         &trans         &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_META  &kp LEFT_ALT   &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans          &trans            &trans         &kp RIGHT_ALT  &trans
                         &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------
            // |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
            // |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  `  |  1  |  2  |  3  |  \  | # |     |       |       | RALT |      |     |
            //                   |  .  |  0  |  -  | # |     | HELD  |       |

            bindings = <
&trans  &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS     &trans  &trans     &trans     &trans         &trans        &trans
&trans  &kp PERIOD    &kp N4        &kp N5        &kp N6        &kp MINUS    &trans  &kp LSHFT  &kp LCTRL  &kp LEFT_META  &kp LEFT_ALT  &trans
&trans  &kp KP_COMMA  &kp N7        &kp N8        &kp N9        &kp EQUAL    &trans  &trans     &trans     &kp RALT       &trans        &trans
                                    &trans        &trans        &trans       &trans  &trans     &trans
            >;
        };

        Applications {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Umlaute_klein {
            bindings = <
&trans  &trans     &trans  &trans      &trans  &trans    &trans  &trans  &Umlaut_u  &trans  &trans     &trans
&trans  &Umlaut_a  &trans  &Umlaut_sz  &trans  &trans    &trans  &trans  &trans     &trans  &Umlaut_O  &trans
&trans  &trans     &trans  &trans      &trans  &trans    &trans  &trans  &trans     &trans  &trans     &trans
                           &trans      &trans  &trans    &trans  &trans  &trans
            >;
        };

        Umlaute_gross {
            bindings = <
&trans  &trans     &trans  &trans      &trans  &trans    &trans  &trans  &Umlaut_U  &trans  &trans     &trans
&trans  &Umlaut_A  &trans  &Umlaut_sz  &trans  &trans    &trans  &trans  &trans     &trans  &Umlaut_O  &trans
&trans  &trans     &trans  &trans      &trans  &trans    &trans  &trans  &trans     &trans  &trans     &trans
                           &trans      &trans  &trans    &trans  &trans  &trans
            >;
        };

        Gaming_QWERTY {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Colemak_dh-EN {
            bindings = <
&trans  &kp Q  &kp W  &kp F          &kp P            &kp B          &kp J        &kp L             &kp U      &kp Y       &kp SEMICOLON  &trans
&trans  &kp A  &kp R  &kp S          &kp T            &kp G          &kp M        &kp N             &kp E      &kp I       &kp O          &trans
&trans  &kp Z  &kp X  &kp C          &kp D            &kp V          &kp K        &kp H             &kp COMMA  &kp PERIOD  &kp FSLH       &trans
                      &lt 11 DELETE  &lt 4 BACKSPACE  &lt 5 SPACE    &lt 6 ENTER  &lt 2 LEFT_SHIFT  &lt 1 TAB
            >;
        };

        Symbols_EN {
            bindings = <
&trans  &kp LG(CARET)  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp SQT            &kp RBRC             &trans                &trans                 &trans         &trans         &trans         &trans
&trans  &kp TILDE      &kp DLLR         &kp PRCNT          &kp LG(AMPERSAND)  &kp PIPE             &trans                &kp LSHFT              &kp LCTRL      &kp LEFT_META  &kp LEFT_ALT   &trans
&trans  &kp AT_SIGN    &kp LEFT_BRACE   &kp RIGHT_BRACE    &kp LEFT_BRACKET   &kp RIGHT_BRACKET    &trans                &trans                 &trans         &kp RALT       &kp RIGHT_ALT  &trans
                                        &trans             &trans             &trans               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
            >;
        };
    };
};
