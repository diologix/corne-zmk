#include <dt-bindings/zmk/mouse.h>
#include "helper.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

//#include "../zmk-nodefree-config/international_chars/german.dtsi"
// Layer Definitions

#define COLEMAK 0
#define QWERTY 1
#define GAMING_COLEMAK 2
#define GAMING_QWERTY 3
#define LAYERS 4
#define NAV 5
#define MOUSE 6
#define MEDIA 7
#define NUM 8
#define SYM 9
#define FN 10

ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // â‚¬
// Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

// Keymap configuration (Colemak-DHm)

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <16 15 14>;
        };

        Control_Combo {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <39 38>;
        };

        Super_Combo {
            bindings = <&kp LEFT_WIN>;
            key-positions = <40 38>;
        };

        ALT_COMBO {
            bindings = <&kp LEFT_ALT>;
            key-positions = <41 38>;
        };

        ComboAffengriff {
            bindings = <&kp LC(LA(DELETE))>;
            key-positions = <14 15 16 19 20 21>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <37 27>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <37 29>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <26 37>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <25 37>;
        };

        shift-copy {
            bindings = <&kp LC(LS(C))>;
            key-positions = <36 27>;
        };

        shift-paste {
            bindings = <&kp LC(LS(V))>;
            key-positions = <36 29>;
        };

        control-layer {
            bindings = <&to 7>;
            key-positions = <36 37>;
        };

        to-layer-0 {
            bindings = <&to 0>;
            key-positions = <3 2 4>;
        };

        Umlaut-oe {
            bindings = <&Umlaut_oe>;
            key-positions = <37 22>;
        };

        Umlaut_ae {
            bindings = <&Umlaut_ae>;
            key-positions = <37 13>;
        };

        Umlaut_ue {
            bindings = <&Umlaut_ue>;
            key-positions = <37 8>;
        };
    };

    macros {
        Umlaut_oe: Umlaut_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_OE";
        };

        umlaut_OE: umlaut_OE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_OE";
        };

        Umlaut_ae: Umlaut_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_AE";
        };

        Umlaut_AE: Umlaut_AE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_AE";
        };

        Umlaut_ue: Umlaut_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_9>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_UE";
        };

        Umlaut_UE: Umlaut_UE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_UE";
        };

        Umlaut_ss: Umlaut_ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp LALT>;

            label = "UMLAUT_SS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0-colemak-dh-de {
            // -----------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     F     |     P     |     B     | # |     J     |    L     |    U    |    Y   |   '    |     |
            // | LAYERS | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT  |     G     | # |     M     | N/LSHFT  | E/LCTRL | I/LALT | O/LGUI |     |
            // |        |   Z    | X/RALT |     C     |     D     |     V     | # |     K     |    H     |    ,    | ./RALT |   /    |     |
            //                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&trans  &kp Q  &kp W  &kp F         &kp P        &kp B          &kp J            &kp L           &kp U      &kp Y       &kp SEMICOLON  &trans
&trans  &kp A  &kp R  &kp S         &kp T        &kp G          &kp M            &kp N           &kp E      &kp I       &kp O          &trans
&trans  &kp Z  &kp X  &kp C         &kp D        &kp V          &kp K            &kp H           &kp COMMA  &kp PERIOD  &kp FSLH       &trans
                      &lt 3 DELETE  &lt 4 SPACE  &lt 5 ENTER    &lt 2 BACKSPACE  &kp LEFT_SHIFT  &lt 1 TAB
            >;
        };

        L1-nav-function {
            // -------------------------------------------------------------------------------------------
            // |     |      |      |       |       |     | # | REDO  | CUT  | COPY | PASTE | UNDO  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |     | # | CAPS  | LEFT | DOWN | UP    | RIGHT |     |
            // |     |      | RALT |       |       |     | # | INS   | HOME | PGDN | PGUP  | END   |     |
            //                     |       | HELD  |     | # | ENTER | BSPC | DEL  |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LC(LS(C))    &kp LC(X)  &kp LC(C)     &kp LC(V)  &kp LC(LS(V))  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT         &kp DOWN   &kp UP_ARROW  &kp RIGHT  &kp LC(Z)      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PRINTSCREEN  &kp HOME   &kp PG_DN     &kp PG_UP  &kp END        &trans
                        &trans  &trans  &trans    &trans           &trans     &trans
            >;
        };

        L2-media {
            // -----------------------------------------------------------------------------------------------------
            // |     |      |      |       |       |      | # | BOOTLOAD | EP_OFF | BR_D   | BR_U   | EP_ON  |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |      | # | RESET    | PREV   | VOL_D  | VOL_U  | NEXT   |     |
            // |     |      | RALT |       |       |      | # | OUT_BLE  | BT_0   | BT_PRV | BT_NXT | BT_CLR |     |
            //                     | HELD  |       |      | # | STOP     | PLAY   | MUTE   |

            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &bootloader   &ext_power EP_OFF  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &ext_power EP_ON  &trans
&trans  &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHFT      &bt BT_CLR      &kp C_PREV    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &kp C_NEXT            &kp PAUSE_BREAK   &trans
&trans  &trans        &to 0         &to 0         &to 0          &trans          &out OUT_TOG  &kp K_MUTE         &kp C_PLAY_PAUSE      &trans                &trans            &trans
                                    &trans        &kp BACKSPACE  &trans          &trans        &trans             &trans
            >;
        };

        L3-symbols {
            // ------------------------------------------------------------------------------------
            // |     |  {  |  &  |  *  |  (  |  }  | # |      |       |       |      |      |     |
            // |     |  :  |  $  |  %  |  ^  |  +  | # |      | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  ~  |  !  |  @  |  #  |  |  | # |      |       |       | RALT |      |     |
            //                   |  (  |  )  |  _  | # | HELD |       |       |

            bindings = <
&trans  &trans       &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp SQT           &kp MINUS            &trans                &trans                 &trans         &trans         &trans         &trans
&trans  &kp TILDE    &kp DLLR         &kp PRCNT          &kp CARET         &kp PIPE             &trans                &kp LSHFT              &kp LCTRL      &kp LEFT_META  &kp LEFT_ALT   &trans
&trans  &kp AT_SIGN  &kp LEFT_BRACE   &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH  &kp RALT       &kp RIGHT_ALT  &trans
                                      &trans             &trans            &trans               &trans                &trans                 &trans
            >;
        };

        L4-Functions {
            bindings = <
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp LSHFT    &trans  &trans          &trans            &trans         &trans         &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp LCTRL    &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_META  &kp LEFT_ALT   &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp LALT     &trans  &trans          &trans            &trans         &kp RIGHT_ALT  &trans
                         &trans  &trans  &trans       &trans  &kp BACKSPACE   &trans
            >;
        };

        L5-numbers {
            // -----------------------------------------------------------------------------------
            // |     |  [  |  7  |  8  |  9  |  ]  | # |     |       |       |      |      |     |
            // |     |  ;  |  4  |  5  |  6  |  =  | # |     | LSHFT | LCTRL | LALT | LGUI |     |
            // |     |  `  |  1  |  2  |  3  |  \  | # |     |       |       | RALT |      |     |
            //                   |  .  |  0  |  -  | # |     | HELD  |       |

            bindings = <
&trans  &kp N0           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS     &trans  &trans     &trans     &trans         &trans        &trans
&trans  &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS    &trans  &kp LSHFT  &kp LCTRL  &kp LEFT_META  &kp LEFT_ALT  &trans
&trans  &kp UNDER        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp EQUAL    &trans  &trans     &trans     &kp RALT       &trans        &trans
                                          &trans           &trans           &trans       &trans  &trans     &trans
            >;
        };

        L6-Applications {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        L7-Control {
            bindings = <
&trans  &trans  &trans  &trans            &trans         &trans          &trans            &trans         &trans         &trans  &trans      &trans
&trans  &trans  &trans  &trans            &trans         &trans          &trans            &trans         &trans         &trans  &Umlaut_oe  &trans
&trans  &trans  &trans  &trans            &trans         &trans          &trans            &trans         &trans         &trans  &trans      &trans
                        &kp LEFT_CONTROL  &kp LEFT_META  &kp LEFT_ALT    &kp LEFT_CONTROL  &kp LEFT_META  &kp RIGHT_ALT
            >;
        };
    };
};
